[
["index.html", "Crea tus API en R con Plumber Chapter 1 Introducción 1.1 Las API Web 1.2 Instalación", " Crea tus API en R con Plumber Jeff Allen Chapter 1 Introducción El lenguaje de programación R (R Core Team 2013) se ha convertido, en los últimos años, en uno de los lenguajes más importantes para el análisis y la visualización de datos. A la misma vez, servicios web ahora son un lenguaje común para que diferentes sistemas puedan interactuar el uno con el otro. El paquete plumber (Trestle Technology, LLC 2017) permite a usuarios R presentar su código R existente como un servicio disponible para otros en la Web. La forma más fácil de ilustrar plumber es con un ejemplo: # plumber.R #&#39; Echo the parameter that was sent in #&#39; @param msg The message to echo back. #&#39; @get /echo function(msg=&quot;&quot;){ list(msg = paste0(&quot;The message is: &#39;&quot;, msg, &quot;&#39;&quot;)) } #&#39; Plot out data from the iris dataset #&#39; @param spec If provided, filter the data to only this species (e.g. &#39;setosa&#39;) #&#39; @get /plot #&#39; @png function(spec){ myData &lt;- iris title &lt;- &quot;All Species&quot; # Filter if the species was specified if (!missing(spec)){ title &lt;- paste0(&quot;Only the &#39;&quot;, spec, &quot;&#39; Species&quot;) myData &lt;- subset(iris, Species == spec) } plot(myData$Sepal.Length, myData$Petal.Length, main=title, xlab=&quot;Sepal Length&quot;, ylab=&quot;Petal Length&quot;) } Aún si no conoces R, probablemente puedes tener una idea aproximada de lo que el API en plumber arriba va a hacer. La primera función define el endpoint /echo que simplemente repite el texto que le ha sido enviado. La segunda función genera un grafico basada en el famosisimo conjunto de datos de Edgar Anderson llamado iris; ademas incluye un filtro que permite al usuario hacer un sub-conjunto de datos a una especie particular. Plumber usa estas anotaciones en el comentario justo encima de las funciones para definir el servicio web. Si pones el archivo arriba en Plumber, lo que vas a obtener es un servicio web que corre, y con el cual otros sistemas pueden interactuar sobre una red. 1.1 Las API Web El Protocolo de Transferencia de Hipertexto (HTTP) es el canal más importante a través intercambiamos información en internet. Una API (por las siglas en inglés de Application Programming Interface) es un termino amplio que define las reglas bajo las cuales puedes interactuar con software. En el caso de las API que usan HTTP, defines una serie de direcciones únicas (llamadas endpoints) que aceptan un input pre-definido. Plumber traduce las anotaciones que pones encima de tus funciones a un API HTTP que puedes llamar desde otras máquinas en tu red. Inclusive puedes hacer tu API disponible en el internet publico, si ejecutas tu API Plumber sobre servidor conectado con el internet. Las API HTTP se han convertido en el mecanismo principal con el cual software se comunica. AL crear un API HTTP, vas a darle el poder de interoperabilidad a tu código R, para que sea usado por otros servicios - no importa is están dentro de tu organización o si se hospedan al otro lado del mundo. Aquí hay un par de ideas de las cosas que podrás hacer una vez que envuelves tu código R en un API Plumber. Software escrito en otros lenguajes en tu organización puede correr tu código R. Por ejemplo, la aplicación escrita en Java ahora puede jalar un ggplot hecho a medida en el momento que lo necesite, o un cliente en Python puede hacer un llamado a un modelo predictivo que has definido en R. Puedes tener algun proveedor que reciba mensajes para ti, y que después notifique tu servicio en Plumber que un mensaje nuevo ha llegado. Podrías registrar un “Comando Slash” en Slack, dándote la posibilidad de ejecutar una función R en respuesta a un comando que entra por Slack. Puedes escribir código en JavaScript que hace una solicitud de búsqueda a tu API Plumber desde el navegador de un visitante a tu página web. Inclusive podrías usar Plumber exclusivamente como el back-end de una aplicación web interactiva. 1.2 Instalación Plumber está disponible en CRAN, así que puedes bajar e instalar la última versión estable y todas sus dependencias corriendo: install.packages(&quot;plumber&quot;) Pero también puedes correr la ultima versión de desarrollo - no estable - de plumber, instalando desde su repositorio en GitHub, usando el paquete devtools. install.packages(&quot;devtools&quot;) devtools::install_github(&quot;trestletech/plumber&quot;) Una vez que tienes plumber instalado, puedes arrancar con la Guia Rapida para leer como puedes tener un servicio corriendo con Plumber en minutos. "]
]
